-- STORED PROCEDURE:- LIKE WE DEFINE VARIABLE IN PYTHON HERE WE DEFINE PROCEDURE WHERE WE WRITE A QURREY AND STORE IN PROCEDURE TO CALL WHEN WE WANT....

DELIMITER \\   -- WE HAVE TO USE THIS DELIMITER OR ANY SPECIAL CHARACTER BCZ EVERY QURREY HAVE TO END WITH A DELIMITER, ; IS ALREADY USED SO WE USE \\..

-- SIMPLE PROCEDURE..

DELIMITER \\
CREATE PROCEDURE PRO_D7()
BEGIN
SELECT FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES
WHERE SALARY > 10000;
END \\
DELIMITER ;

-- TO CALL PROCEDURE USE:
CALL PRO_C7();

-- TO CHECK HOW MANY PROCEDURE WE ARE CREATED USE
SHOW PROCEDURE STATUS;

-- FOR PARTICULAR DATA BASE WE WANT SEE PROCEDURE USE :
SHOW PROCEDURE STATUS
WHERE DB='HR';

-- TO DROP PROCEDURE USE
DROP PROCEDURE PRO_D7;
-- -----------------------------------------------------------------------------------
-- PROCEDURE WITH IN PARAMETER..
-- PROCEDURE WITH USER INPUT 
-- I.E BASED ON USER INPUT THE RESULT WILL GENERATED 
-- EVERY TIME THE REQUIRMENT WILL CHANGE IF WE USE USER INPUT FUNCTION BASED ON USER INPUT THE RESULT WILL GENERATED...
DELIMITER \\
CREATE PROCEDURE DUMMY_2(IN VAR_1 INT)  -- IN MEANS INPUT,VAR_1 is VARIABLE NAME,INT TYPE OF INPUT WE ARE GIVING...
BEGIN
SELECT SALARY FROM EMPLOYEES
WHERE EMPLOYEE_ID=VAR_1;
END \\
DELIMITER ;

CALL DUMMY_2(104);
-- --------------------------
DELIMITER \\
CREATE PROCEDURE DUMMY_3(IN VAR_2 INT)  -- IN MEANS INPUT,VAR_1 is VARIABLE NAME,INT TYPE OF INPUT WE ARE GIVING...
BEGIN
SELECT * FROM EMPLOYEES
WHERE SALARY > VAR_2;
END \\
DELIMITER ;

CALL DUMMY_3(1000);
CALL DUMMY_3(20000);
-- ---------------------------------------------------------------------
SELECT * FROM EMPLOYEES;
DELIMITER \\
CREATE PROCEDURE DUMMY_4(IN A INT,IN B VARCHAR(50))
BEGIN
select * FROM EMPLOYEES
WHERE JOB_ID=B AND MANAGER_ID=A;
END \\
DELIMITER ;

CALL DUMMY_4(103,'IT_PROG');

CALL DUMMY_4(148,'SA_REP');

-- ---------------------------------------------------------

-- PROCEDURE WITH OUT PARAMETER
-- WE CAN STORE A PROCEDURE RESULT IN A VARIABLE...
-- TO DEFINE A VARIBLE IN SQL WE USE @ I.E SET @SAL=10000..

SET @SAL1=10000;
SET @SAL2=15000;

SELECT * FROM EMPLOYEES
WHERE SALARY BETWEEN @SAL1 AND @SAL2;

-- IN PROCEDURE TO STORE THE IN VARIABLE WE WILL OUT PARAMETER.. 
DELIMITER \\
CREATE PROCEDURE DUMMY_5(OUT VAR INT) -- OUT MEANS STORING RESULT ,VAR MEANS NAME OF A VARIABLE,INT MEANS RESULT DATA TYPE..
BEGIN
SELECT AVG(SALARY) INTO VAR FROM EMPLOYEES; -- INTO MEANS STORE RESULT INTO VAR..
END\\
DELIMITER ;

CALL DUMMY_5(@VAR);  -- TO CALL  OR DEFINE A VIARAIBLE WE USE @ BEFORE ITS NAME.. 
SELECT @VAR;

SELECT * FROM EMPLOYEES
WHERE SALARY > @VAR;

-- ------------------------------------------------
-- PROCEDURE WITH  IN AND OUT PARAMETERS...

DELIMITER \\
CREATE PROCEDURE DUMMY_7(IN INPUT INT,OUT OUTPUT INT)
BEGIN
SELECT SALARY INTO OUTPUT FROM EMPLOYEES
WHERE EMPLOYEE_ID= INPUT;
END \\
DELIMITER ;

CALL DUMMY_7(103,@OUTPUT);

SELECT @OUTPUT;

CALL DUMMY_7(101,@OUTPUT);

SELECT @OUTPUT;
-- ----------------------------------------------------
-- PRACTICE..........................


DELIMITER \\
CREATE PROCEDURE DUMMY_8(IN INPUT VARCHAR(50))
BEGIN
SELECT * FROM EMPLOYEES 
WHERE JOB_ID= INPUT;
END \\
DELIMITER ;

CALL DUMMY_8('IT_PROG');
CALL DUMMY_8('SA_REP');

SHOW PROCEDURE STATUS 
WHERE DB='HR';


use hr;
SET AUTOCOMMIT=0;

SELECT * FROM EMPLOYEES;

DELIMITER \\
CREATE PROCEDURE DUMMY_10(IN PUT INT)
BEGIN
UPDATE EMPLOYEES
SET SALARY =20000
WHERE EMPLOYEE_ID=PUT;
END \\
DELIMITER ;

CALL DUMMY_10(103);
ROLLBACK ;

SELECT * FROM EMPLOYEES;
--  --+--------------------------------------------------------------------------------
DELIMITER \\
CREATE PROCEDURE DUMMY_11(IN D INT)
BEGIN
DELETE FROM EMPLOYEES
WHERE EMPLOYEE_ID=D;
END \\
DELIMITER ;

CALL DUMMY_11(105);
ROLLBACK;
-- ----------------------------------------

